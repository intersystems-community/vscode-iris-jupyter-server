{
  "name": "iris-jupyter-server",
  "displayName": "Jupyter Server Proxy for InterSystems IRIS",
  "description": "Run a local Jupyter Server acting as a proxy for InterSystems IRIS servers defined in InterSystems Server Manager",
  "version": "0.2.2-SNAPSHOT",
  "preview": true,
  "publisher": "intersystems-community",
  "icon": "images/logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/intersystems-community/vscode-iris-jupyter-server"
  },
  "license": "MIT",
  "keywords": [
    "intersystems",
    "objectscript",
    "python",
    "jupyter"
  ],
  "contributors": [
    {
      "name": "John Murray",
      "email": "johnm@georgejames.com"
    }
  ],
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Other"
  ],
  "private": true,
  "extensionDependencies": [
    "ms-toolsai.jupyter",
    "intersystems-community.objectscript-pack"
  ],
  "activationEvents": [
    "onNotebook:jupyter-notebook",
    "onCommand:jupyter.selectjupyteruri",
    "onCommand:switchToRemoteKernels",
    "onCommand:switchToAnotherRemoteKernels"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "iris-polyglot",
        "aliases": [
          "Polyglot IRIS notebook"
        ]
      }
    ],
    "configuration": {
      "title": "IRIS Jupyter Server",
      "properties": {
        "iris-jupyter-server.port": {
          "type": "number",
          "markdownDescription": "Local port to use for running Jupyter notebooks on InterSystems IRIS servers. Restart the extension after changing this setting.",
          "scope": "window",
          "default": 50773
        },
        "iris-jupyter-server.hosts": {
          "type": "object",
          "markdownDescription": "`server:NAMESPACE` targets for running Jupyter notebooks on InterSystems IRIS servers, which are themselves defined in `#intersystems.servers#`.",
          "scope": "resource",
          "patternProperties": {
            "[a-z0-9-_~]+:[%A-Z][A-Z\\-_]*": {
              "type": "object",
              "markdownDescription": "Define a host to connect to. Format is `server:NAMESPACE` where `server` is an entry in `intersystems.servers` and `NAMESPACE` is a namespace on that server. The `intersystems.servers` entry must have a `superServer` object property defined.",
              "description": "server:NAMESPACE",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable this host.",
                  "default": true
                }
              },
              "default": {
                "enabled": true
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run webpack",
    "compile": "webpack",
    "watch": "webpack --watch",
    "webpack": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package-prep": "node -e \"require('fs').rmSync('./dist/', { recursive: true, force: true })",
    "package:win32-x64": "npm run package-prep && node -e \"require('fs').cpSync('./intersystems-iris-native/bin/winx64/', './dist/', { recursive: true, filter: (f) => !f.endsWith('irisnative.node') })\" && vsce package --target win32-x64",
    "package:darwin-x64": "npm run package-prep && node -e \"require('fs').cpSync('./intersystems-iris-native/bin/macx64/', './dist/', { recursive: true, filter: (f) => !f.endsWith('irisnative.node') })\" && vsce package --target darwin-x64",
    "package:darwin-arm64": "npm run package-prep && node -e \"require('fs').cpSync('./intersystems-iris-native/bin/macos/', './dist/', { recursive: true, filter: (f) => !f.endsWith('irisnative.node') })\" && vsce package --target darwin-arm64",
    "package:linux-x64": "npm run package-prep && node -e \"require('fs').cpSync('./intersystems-iris-native/bin/lnxubuntux64/', './dist/', { recursive: true, filter: (f) => !f.endsWith('irisnative.node') })\" && vsce package --target linux-x64"
  },
  "dependencies": {
    "fastify": "^5.0.0",
    "@fastify/websocket": "^11.0.1",
    "@nteract/messaging": "7.0.20",
    "async-mutex": "^0.4.0",
    "axios": "^1.7.7",
    "json5": "^2.2.3",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@intersystems-community/intersystems-servermanager": "^3.8.0",
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.0",
    "@types/node": "16.x",
    "@types/uuid": "^8.3.4",
    "@types/vscode": "^1.93.0",
    "@types/ws": "^8.5.3",
    "@typescript-eslint/eslint-plugin": "^5.38.1",
    "@typescript-eslint/parser": "^5.38.1",
    "@vscode/jupyter-extension": "^1.1.1",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.24.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "node-loader": "^2.0.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.6.3",
    "webpack": "^5.80.0",
    "webpack-cli": "^4.10.0"
  }
}
