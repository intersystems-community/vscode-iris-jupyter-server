// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.224.2/containers/docker-existing-docker-compose
{
	"name": "vscode-iris-jupyter-server devcontainer",

	// Use a modified recipe to create the container
	"dockerComposeFile": [
		"./docker-compose.yml"
	],

	"service": "iris",

	"workspaceFolder": "/irisdev/app",

	// The next set of lines are for Codespaces
	"remoteUser": "irisowner",
	"forwardPorts": [
		52773,
		1972
	],
	"postCreateCommand": "mkdir -p dist && cp intersystems-iris-native/bin/lnxubuntux64/*.so dist && npm install",
	"postStartCommand": "iris start iris",

	"customizations": {
		"vscode": {


			// This provides the elements of the connection object which require different values when connecting to the workspace within the container,
			// versus those in .vscode/settings.json which apply when operating locally on the workspace files.
			// We define and use a `server` so that (a) a user-level `objectscript.conn.server` property doesn't override us, and (b) so InterSystems
			// Server Manager can also be used.
			"settings": {
				"objectscript.conn" :{
					"server": "devcontainer",
					"ns": "USER",
					"active": true
				},
				"objectscript.ignoreInstallLanguageServer": true,
				"intersystems.servers": {
					"devcontainer": {
						"username": "SuperUser",
						"password": "SYS",
						"webServer": {
							"scheme": "http",
							"host": "127.0.0.1",
							"port": 52773
						},
						"superServer": {
							"host": "127.0.0.1",
							"port": 1972
						}
					}
				},
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "bash",
						"icon": "terminal-bash"
					},
					"iris": {
						"path": "iris",
						"args": [
							"session",
							"iris"
						]
					}
				}
			},

			// Add the IDs of extensions we want installed when the container is created.
			"extensions": [
				"ms-toolsai.jupyter",
				"ms-toolsai.jupyter-renderers",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"intersystems-community.vscode-objectscript",
				"intersystems.language-server",
				"intersystems-community.servermanager"
			]
		}
	}
}
